{
  "permissions": {
    "allow": [
      "Bash(bd quickstart:*)",
      "Bash(bd init:*)",
      "Bash(bd create:*)",
      "Bash(bd dep add:*)",
      "Bash(bd update:*)",
      "Bash(bd close:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(bd list:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "Bash(pip3 install:*)",
      "Bash(python3:*)",
      "Bash(source venv/bin/activate)",
      "Bash(pip install:*)",
      "Bash(pytest:*)",
      "Bash(git stash:*)",
      "mcp__serena__read_memory",
      "Bash(find:*)",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__activate_project",
      "Bash(poetry run pytest:*)",
      "Bash(uv run pytest:*)",
      "Bash(uv pip install:*)",
      "mcp__morphllm-fast-apply__edit_file",
      "Bash(ANTHROPIC_API_KEY=\"test-key\" uv run pytest:*)",
      "Bash(ANTHROPIC_API_KEY=\"test-key\" pytest:*)",
      "Bash(export ANTHROPIC_API_KEY=\"test-key\")",
      "mcp__serena__list_memories",
      "Bash(gh issue create:*)",
      "Bash(git mv:*)",
      "Bash(tree:*)",
      "Bash(bd show:*)",
      "Bash(pm2 --version:*)",
      "Bash(npm install:*)",
      "Bash(sudo npm install:*)",
      "Bash(chmod:*)",
      "mcp__serena__get_current_config",
      "Bash(sudo systemctl status:*)",
      "Bash(pm2 list:*)",
      "Bash(pm2 logs:*)",
      "Bash(pm2 stop:*)",
      "Bash(pm2 delete:*)",
      "Bash(./scripts/start-staging.sh:*)",
      "Bash(cat:*)",
      "Bash(pm2 start:*)",
      "Bash(pm2 restart:*)",
      "Bash(venv/bin/python -m codeframe.ui.server:*)",
      "Bash(curl:*)",
      "Bash(bd:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__insert_after_symbol",
      "mcp__uvx__find_files",
      "mcp__uvx__set_project_path",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(test -f /home/frankbria/projects/codeframe/codeframe/agents/definition_loader.py)",
      "Bash(pip3 show pytest)",
      "Bash(venv/bin/pip install -e \".[dev]\" -q)",
      "Bash(source .venv/bin/activate)",
      "Bash(.specify/scripts/bash/check-prerequisites.sh --json --require-tasks --include-tasks)",
      "Bash(git rev-parse --git-dir)",
      "Skill(superpowers:brainstorming)",
      "Skill(superpowers:using-git-worktrees)",
      "Skill(superpowers:writing-plans)",
      "Skill(superpowers:subagent-driven-development)",
      "Bash(git rev-parse:*)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Skill(superpowers:finishing-a-development-branch)",
      "Bash(if [ -f .venv/bin/activate ])",
      "Bash(then source .venv/bin/activate)",
      "Bash(elif [ -f venv/bin/activate ])",
      "Bash(then source venv/bin/activate)",
      "Bash(else echo \"No venv found, skipping Python tests\")",
      "Bash(fi)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash(else echo \"No venv found\")",
      "Bash(git worktree:*)",
      "Bash(mkdir:*)",
      "Bash(gh pr view:*)",
      "Bash(ANTHROPIC_API_KEY=\"test-key\" venv/bin/python -m pytest:*)",
      "Bash(test:*)",
      "Bash(timeout 30 python -m pytest:*)",
      "Bash(timeout 30 python3 -m pytest:*)",
      "Bash(timeout 30 venv/bin/python -m pytest:*)",
      "Bash(timeout 15 venv/bin/python -m pytest:*)",
      "Bash(python -m py_compile:*)",
      "Bash(timeout 10 venv/bin/python -m pytest:*)",
      "Bash(timeout 5 python3:*)",
      "Bash(timeout 5 venv/bin/python:*)",
      "Bash(timeout 20 venv/bin/python -m pytest:*)",
      "Bash(timeout 20 venv/bin/python:*)",
      "Bash(venv/bin/python:*)",
      "Bash(tee:*)",
      "Bash(timeout 10 venv/bin/python:*)",
      "Read(//tmp/**)",
      "Bash(gh pr list:*)",
      "Bash(gh pr edit:*)",
      "Bash(timeout 60 venv/bin/python -m pytest:*)",
      "Bash(if [ -f venv/bin/activate ])",
      "Bash(elif [ -f .venv/bin/activate ])",
      "Bash(else python -m pytest tests/ -v)",
      "Bash(timeout 20 python -m pytest:*)",
      "Bash(timeout 60 python -m pytest:*)",
      "Bash(git merge-base:*)",
      "Bash(/dev/null)",
      "Bash(gh pr create:*)",
      "Bash(git fetch:*)"
    ],
    "deny": [],
    "ask": []
  }
}
